name: CI
on:
  push:
    branches:
      - master

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
      WEBDROP_WEB_PORT: 3000
      REACT_APP_WEBDROP_PROXY: ${{ secrets.WEBDROP_PROXY }}
      WEBDROP_BACKEND_PORT: 4000

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Prepare build
      run: touch .env

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        WEBDROP_ECR_REPOSITORY: ${{ secrets.WEBDROP_ECR_REPOSITORY }}
      run: |
        # Build images
        docker-compose build
        echo Images built
        # Tag images
        WEB_IMAGE=$ECR_REGISTRY/$WEBDROP_ECR_REPOSITORY:web-latest
        BACKEND_IMAGE=$ECR_REGISTRY/$WEBDROP_ECR_REPOSITORY:backend-latest
        PROXY_IMAGE=$ECR_REGISTRY/$WEBDROP_ECR_REPOSITORY:proxy-latest
        docker tag web:latest $WEB_IMAGE
        docker tag backend:latest $BACKEND_IMAGE
        docker tag proxy:latest $PROXY_IMAGE
        docker images
        # Push images to ECR
        docker push $WEB_IMAGE
        echo Pushed $WEB_IMAGE to ECR
        docker push $BACKEND_IMAGE
        echo Pushed $BACKEND_IMAGE to ECR
        docker push $PROXY_IMAGE
        echo Pushed $PROXY_IMAGE to ECR